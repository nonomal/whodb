name: Create Draft Release

on:
  workflow_dispatch:

jobs:
  build_docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get next version
        id: get_version
        run: |
          LATEST_TAG=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | sed 's/v//')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="0.0.0"
          fi
          MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
          MINOR=$(echo $LATEST_TAG | cut -d. -f2)
          PATCH=$(echo $LATEST_TAG | cut -d. -f3)
          NEXT_MINOR=$((MINOR + 1))
          echo "NEXT_VERSION=${MAJOR}.${NEXT_MINOR}.${PATCH}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./core/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: clidey/whodb:${{ env.NEXT_VERSION }}

  build_desktop_linux:
    name: Build Linux Desktop App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'desktop-ce/go.mod'

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm i --prod

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install Linux dependencies
        run: sudo apt-get update && sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev upx-ucl nsis libwebkit2gtk-4.1-0

      - name: Build Linux amd64
        working-directory: ./desktop-ce
        run: make build-prod-linux-amd64

      - name: Build Linux arm64
        working-directory: ./desktop-ce
        run: make build-prod-linux-arm64

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: |
            desktop-ce/build/linux/amd64/whodb
            desktop-ce/build/linux/arm64/whodb

  build_desktop_windows:
    name: Build Windows Desktop App
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'desktop-ce/go.mod'

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm i --prod

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build Windows amd64
        working-directory: ./desktop-ce
        shell: pwsh
        run: make build-prod-windows-amd64

      - name: Build Windows arm64
        working-directory: ./desktop-ce
        shell: pwsh
        run: make build-prod-windows-arm64

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            desktop-ce/build/windows/amd64/whodb-installer.exe
            desktop-ce/build/windows/arm64/whodb-installer.exe

  build_desktop_macos:
    name: Build macOS Desktop App
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'desktop-ce/go.mod'

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm i --prod

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build macOS universal
        working-directory: ./desktop-ce
        run: make build-prod-mac

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: desktop-ce/build/darwin/universal/WhoDB.app

  create_release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    needs: [build_docker, build_desktop_linux, build_desktop_windows, build_desktop_macos]
    permissions:
      contents: write
    steps:
      - name: Download linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-builds
          path: release-assets

      - name: Download windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-builds
          path: release-assets

      - name: Download macos artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: release-assets
      
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: release-assets

      - name: Create Draft Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/*
          draft: true
          tag_name: v0.0.0-${{ github.sha }}
          fail_on_unmatched_files: true
